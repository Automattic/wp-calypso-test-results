name: Generate updated Allure report

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      allure_result_filename:
        required: true
        
  # Runs on webhook calls
  repository_dispatch:
    types:
      - webhook

# Allow one concurrent run/deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
env:
  REPORT_PATH: ${{ github.workspace }}/docs/report
  ALLURE_RESULTS_PATH: ${{ github.workspace }}/allure_results
  CURRENT_REPORT_PATH: ${{ github.workspace }}/current_allure_report
  
jobs:

  # Prepare the environment
  prepare:
    name: Prepare environment
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
#       - name: Checkout this repo
#         uses: actions/checkout@v3
#         with:
#           path: repo
#           token: ${{ secrets.GITHUB_TOKEN }}
#           ref: ${{ github.ref_name }}

      - name: Install allure-commandline package
        run: npm install -g allure-commandline
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: Download and untar Allure artifact from S3
        env:
          SOURCE: ${{ secrets.AWS_S3_BUCKET_BASE_URL }}/${{ github.event.inputs.allure_result_filename }}
          DESTINATION: ${{ github.workspace }}/allure-results.tgz
        run: |
          aws s3 cp $SOURCE $DESTINATION
          
          mkdir -p ${{ env.ALLURE_RESULTS_PATH }}
          tar xvfz ${{ env.DESTINATION }} -C ${{ env.ALLURE_RESULTS_PATH }}
      
      - name: Download and untar existing Allure report from S3
        continue-on-error: true
        env:
          SOURCE: ${{ secrets.AWS_S3_BUCKET_BASE_URL }}/current_allure_report.tgz
          DESTINATION: ${{ github.workspace }}/current-allure-report.tgz
        run: |
          aws s3 cp $SOURCE $DESTINATION
          
          mkdir -p ${{ env.CURRENT_REPORT_PATH }}
          tar xvfz ${{ env.DESTINATION }} -C ${{ env.CURRENT_REPORT_PATH }}
    
  # Regenerate the report
  generate_allure_report:
    name: Generate Pre-Release Allure reports
    needs: prepare
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    env:
      GITHUB_TOKEN: ${{ github.token }}
      
    steps:
      - name: Generate report with history
        run: |
          if [[ -d "$CURRENT_REPORT_PATH" ]]; then
              echo "Copying report history to new Allure results data..."
              # Make the "history" directory in the newest Allure results directory.
              mkdir -p $ALLURE_RESULTS_PATH/history
              # Copy over contents of the "hinstory" directory from the existing report.
              cp -R $CURRENT_REPORT_PATH/history/ $ALLURE_RESULTS_PATH/history
          else 
              echo "No prior report found. Creating directory..."
              # Fresh run. Allure will generate report without considering history.
              mkdir -p $REPORT_PATH
          fi

          echo "Generating report..."
          allure generate --clean $ALLURE_RESULTS_PATH --output $REPORT_PATH
          echo "Finished generating report."

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload the generated report
          path: ${{env.REPORT_PATH}}

  # Publish the generated report
  publish:
    name: Publish
    needs: generate_allure_report
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
            
