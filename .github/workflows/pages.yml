# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Generate updated Allure report

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["trunk"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions: write-all

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  publish_pr_test_reports:
    name: Publish Pre-Release Allure reports
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Install allure-commandline package
        run: npm install -g allure-commandline
      
      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          path: repo
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref_name }}
          
      - name: Generate report with history
        working-directory: repo
        env:
          EXISTING_REPORT_PATH: ${{ github.workspace }}/docs/report
#           NEW_ALLURE_RESULTS_PATH: ${{ github.workspace }}/data
          OUTPUT_PATH: ${{ github.workspace }}/docs/report
        run: | 
          LATEST_DATA="${{ github.workspace }}"
          echo "LATEST_DATA=${LATEST_DATA}" >> $NEW_ALLURE_RESULTS_PATH
          echo $NEW_ALLURE_RESULTS_PATH
