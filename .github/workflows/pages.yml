# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Generate updated Allure report

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["trunk"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions: write-all

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
env:
  EXISTING_REPORT_PATH: ${{ github.workspace }}/docs/report
  OUTPUT_PATH: ${{ github.workspace }}/docs/report
  
jobs:
  publish_pr_test_reports:
    name: Publish Pre-Release Allure reports
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Install allure-commandline package
        run: npm install -g allure-commandline
      
      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          path: repo
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref_name }}
          
      - name: Generate report with history
        working-directory: repo
        env:
          NEW_RESULTS_BASE_PATH: ${{ github.workspace }}/
        run: |
          NEW_ALLURE_RESULTS_PATH=/some/path/$(ls -t data/*/ | head -1)
          echo $NEW_ALLURE_RESULTS_PATH
          mkdir -p $NEW_ALLURE_RESULTS_PATH/history
          cp -r $EXISTING_REPORT_PATH/history/* $NEW_ALLURE_RESULTS_PATH/history
          allure generate --clean $NEW_ALLURE_RESULTS_PATH --output $OUTPUT_PATH
      - name: Push changes to branch
        working-directory: repo
        env:
          GITHUB_USER: ${{ secrets.REPORTS_USER }}
          GITHUB_EMAIL: ${{ secrets.REPORTS_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
          BOT_COMMIT_MESSAGE: "regenerated report using data from ${{github.event_name}}"
        run: |
          git config user.name $GITHUB_USER
          git config user.email $GITHUB_EMAIL
          git add .
          git commit -m "GitHub Actions: ${{env.BOT_COMMIT_MESSAGE}}"
